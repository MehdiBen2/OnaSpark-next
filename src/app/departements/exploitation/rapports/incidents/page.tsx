'use client';

import { useState } from 'react'
import { motion } from 'framer-motion'
import { Plus, Search, SlidersHorizontal } from 'lucide-react'
import { useSession } from 'next-auth/react'

// TODO: Replace with your actual types
type Unit = string
type UserRole = 'admin' | 'user'

export default function IncidentsPage() {
  const { data: session } = useSession()
  const [searchQuery, setSearchQuery] = useState('')
  
  // TODO: Replace with actual user data from your auth system
  const userUnit = session?.user?.unit as Unit | undefined
  const userRole = session?.user?.role as UserRole | undefined

  return (
    <div className="min-h-screen bg-gray-50/50 p-6 pt-20">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="w-full"
      >
        {/* Header Card */}
        <div className="rounded-2xl shadow-md p-6 mb-8 text-white" style={{ background: 'linear-gradient(135deg, #0061f2 0%, #0e83cd 50%, #00a6eb 100%)' }}>
          <div className="space-y-6">
            {/* Organization Title */}
            <h1 className="text-2xl font-bold text-center text-white">
              OFFICE NATIONAL DE L&apos;ASSAINISSEMENT
            </h1>
            
            {/* Subtitle - Conditional based on user role */}
            <h2 className="text-xl font-semibold text-center text-white/90">
              {userRole === 'admin' 
                ? 'Tous les incidents' 
                : `Incidents de l'unité ${userUnit || ''}`}
            </h2>
            
            {/* Description */}
            <p className="text-center text-white/80">
              Incidents sur les stations de relevage et les stations d&apos;épuration
            </p>

            {/* Action Bar */}
            <div className="flex flex-col sm:flex-row gap-4 items-center justify-between pt-4">
              {/* Search Bar */}
              <div className="relative w-full sm:w-96">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-white" size={20} />
                <input
                  type="text"
                  placeholder="Rechercher un incident..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="w-full pl-10 pr-4 py-2 border-0 rounded-lg focus:ring-2 focus:ring-white/30 focus:border-transparent bg-white/10 placeholder-white/70 text-white"
                />
              </div>

              {/* Actions */}
              <div className="flex gap-3 w-full sm:w-auto">
                {/* Sort Button */}
                <button
                  className="flex items-center gap-2 px-4 py-2 text-white bg-white/10 border border-white/20 rounded-lg hover:bg-white/20 transition-colors"
                >
                  <SlidersHorizontal size={20} />
                  <span>Trier</span>
                </button>

                {/* New Incident Button */}
                <button
                  className="flex items-center gap-2 px-4 py-2 text-black bg-white rounded-lg hover:bg-white/90 transition-colors"
                >
                  <Plus size={20} />
                  <span>Nouveau incident</span>
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* Incidents List will go here */}
        <div className="bg-white rounded-2xl shadow-md p-6">
          {/* TODO: Add incidents list component */}
          <p className="text-center text-gray-500">Liste des incidents à venir...</p>
        </div>
      </motion.div>
    </div>
  )
}
