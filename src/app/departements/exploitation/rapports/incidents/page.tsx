'use client'

import React, { useState } from 'react'
import { motion } from 'framer-motion'
import { ArrowLeft, FileText, Save } from 'lucide-react'
import Link from 'next/link'
import Image from 'next/image'
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Button } from "@/components/ui/button"
import { Textarea } from "@/components/ui/textarea"

const IncidentsBanner = () => {
  return (
    <div className="relative bg-gradient-to-br from-[#4a90e2] to-[#1a237e] text-white overflow-hidden shadow-2xl">
      <div className="absolute inset-0 opacity-20 overflow-hidden">
        <div className="absolute -top-20 -right-20 w-96 h-96 bg-white/10 rounded-full animate-pulse"></div>
        <div className="absolute -bottom-20 -left-20 w-96 h-96 bg-white/10 rounded-full animation-delay-2000"></div>
      </div>
      
      <div className="absolute inset-0 pointer-events-none">
        <div className="absolute inset-0 bg-gradient-to-br from-transparent via-white/5 to-transparent opacity-10"></div>
        <div className="absolute inset-0 opacity-5 bg-[linear-gradient(0deg,transparent_24%,rgba(255,255,255,0.05)_25%,rgba(255,255,255,0.05)_26%,transparent_27%,transparent_74%,rgba(255,255,255,0.05)_75%,rgba(255,255,255,0.05)_76%,transparent_77%,transparent)] bg-[length:4rem_4rem]"></div>
      </div>

      <div className="relative px-4 py-16 md:px-8 md:py-20 max-w-7xl mx-auto flex items-center justify-between min-h-[200px]">
        <div className="flex-1 text-center md:text-left relative z-10">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
          >
            <h2 className="text-4xl md:text-5xl font-black mb-4 bg-clip-text text-transparent bg-gradient-to-r from-white to-white/70 drop-shadow-lg">
              Signaler un Incident
            </h2>
            
            <div className="flex items-center justify-center md:justify-start space-x-4 text-white/80">
              <FileText className="w-6 h-6 opacity-70" />
              <p className="text-xl font-black tracking-wide">
                Rapport Détaillé d'Incident
              </p>
            </div>
          </motion.div>
        </div>
        
        <div className="hidden md:block -mr-16">
          <Image 
            src="/images/onalogos/sparkLogofull.png" 
            alt="ONA Spark Logo" 
            width={350} 
            height={120} 
            className="max-w-[350px] opacity-90"
          />
        </div>
      </div>

      <div className="absolute bottom-4 left-4 md:left-8">
        <Link href="/departements/exploitation/rapports">
          <Button 
            variant="outline" 
            className="bg-white/20 text-white hover:bg-white/30 border-white/30"
          >
            <ArrowLeft className="w-5 h-5 mr-2" />
            Retour aux Rapports
          </Button>
        </Link>
      </div>
    </div>
  )
}

export default function IncidentsPage() {
  const [formData, setFormData] = useState({
    unite: '',
    typeStructure: '',
    titre: '',
    wilaya: '',
    commune: '',
    localite: '',
    natureEtCause: '',
    dateHeure: '',
    niveauGravite: '',
    mesuresPrises: '',
    impact: ''
  })

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // Handle form submission
    console.log(formData)
  }

  return (
    <div className="min-h-screen bg-gray-50/50">
      <IncidentsBanner />

      {/* Form */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 -mt-1">
        <form onSubmit={handleSubmit} className="space-y-8">
          {/* Informations de base */}
          <div className="bg-white shadow rounded-lg p-6">
            <h2 className="text-lg font-semibold text-black mb-6">
              Informations de base
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="unite" className="text-black">Unité *</Label>
                <Select 
                  onValueChange={(value) => setFormData({...formData, unite: value})}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="Sélectionner une unité" className="text-black" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="unite1">Unité 1</SelectItem>
                    <SelectItem value="unite2">Unité 2</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="typeStructure" className="text-black">Type de Structure *</Label>
                <Select
                  onValueChange={(value) => setFormData({...formData, typeStructure: value})}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="Sélectionner le type de structure" className="text-black" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="type1">Type 1</SelectItem>
                    <SelectItem value="type2">Type 2</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2 md:col-span-2">
                <Label htmlFor="titre" className="text-black">Titre de l'incident *</Label>
                <Input 
                  id="titre"
                  placeholder="Entrer le titre de l'incident"
                  className="text-black"
                  onChange={(e) => setFormData({...formData, titre: e.target.value})}
                />
              </div>
            </div>
          </div>

          {/* Localisation */}
          <div className="bg-white shadow rounded-lg p-6">
            <h2 className="text-lg font-semibold text-black mb-6">
              Localisation
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="space-y-2">
                <Label htmlFor="wilaya" className="text-black">Wilaya *</Label>
                <Input 
                  id="wilaya"
                  placeholder="Entrer la wilaya"
                  className="text-black"
                  onChange={(e) => setFormData({...formData, wilaya: e.target.value})}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="commune" className="text-black">Commune *</Label>
                <Input 
                  id="commune"
                  placeholder="Entrer la commune"
                  className="text-black"
                  onChange={(e) => setFormData({...formData, commune: e.target.value})}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="localite" className="text-black">Localité *</Label>
                <Input 
                  id="localite"
                  placeholder="Entrer la localité"
                  className="text-black"
                  onChange={(e) => setFormData({...formData, localite: e.target.value})}
                />
              </div>
            </div>
          </div>

          {/* Détails de l'incident */}
          <div className="bg-white shadow rounded-lg p-6">
            <h2 className="text-lg font-semibold text-black mb-6">
              Détails de l'incident
            </h2>
            <div className="space-y-6">
              <div className="space-y-2">
                <Label htmlFor="natureEtCause" className="text-black">Nature et cause de l'incident</Label>
                <Textarea 
                  id="natureEtCause"
                  placeholder="Décrire la nature et la cause de l'incident"
                  className="text-black"
                  onChange={(e) => setFormData({...formData, natureEtCause: e.target.value})}
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-2">
                  <Label htmlFor="dateHeure" className="text-black">Date et heure *</Label>
                  <Input 
                    id="dateHeure"
                    type="datetime-local"
                    className="text-black"
                    onChange={(e) => setFormData({...formData, dateHeure: e.target.value})}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="niveauGravite" className="text-black">Niveau de gravité *</Label>
                  <Select
                    onValueChange={(value) => setFormData({...formData, niveauGravite: value})}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="Sélectionner le niveau de gravité" className="text-black" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="faible">Faible</SelectItem>
                      <SelectItem value="moyen">Moyen</SelectItem>
                      <SelectItem value="eleve">Élevé</SelectItem>
                      <SelectItem value="critique">Critique</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
            </div>
          </div>

          {/* Mesures et impact */}
          <div className="bg-white shadow rounded-lg p-6">
            <h2 className="text-lg font-semibold text-black mb-6">
              Mesures et impact
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="mesuresPrises" className="text-black">Mesures prises</Label>
                <Textarea 
                  id="mesuresPrises"
                  placeholder="Décrire les mesures prises"
                  className="text-black"
                  onChange={(e) => setFormData({...formData, mesuresPrises: e.target.value})}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="impact" className="text-black">Impact de l'incident</Label>
                <Textarea 
                  id="impact"
                  placeholder="Décrire l'impact de l'incident"
                  className="text-black"
                  onChange={(e) => setFormData({...formData, impact: e.target.value})}
                />
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>
  )
}
